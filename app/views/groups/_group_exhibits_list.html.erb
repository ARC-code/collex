<% # 
    # ------------------------------------------------------------------------
    # Copyright 2009 Applied Research in Patacriticism and the University of Virginia
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
  
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # ---------------------------------------------------------------------------- -%>
<%# group_exhibits_list : parameters: ActiveRecord group, ActiveRecord cluster, int user_id -%>
<%# if cluster is nil, then this is the group page, otherwise it is the cluster page -%>
<% cluster ||= nil -%>
<% if cluster == nil -%>
<script type="text/javascript">
<% clusters = Cluster.find_all_by_group_id(group.id)
	cluster_options = []
	for clus in clusters
		cluster_options.push({ :text => clus.name, :value => clus.id })
	end
-%>
	gClusterOptions = <%= cluster_options.to_json()  %>;
</script>
<% end -%>
<div class="group_header">Exhibits</div>
<% if group.can_edit(user_id) -%>
<div class="set_exhibit_style">
<% if cluster == nil -%>
	<span class="group_member_explanation">As an administrator for this group, you have the option to create a custom style for all exhibits associated with your group. </span>
	<%= link_to_function("Click here to set a new style.", "new EditFontsDlg('/groups/update', #{group.id}, gGroupData, 'group', true, 'group_details')", { :class => 'modify_link' }) %>
	<ul>
<% if group.can_create_exhibit(user_id) -%>
		<li><%= link_to_function "Create an Exhibit", "var dlg = new CreateNewExhibitWizard({ group_id: #{group.id}, #{cluster != nil ? 'cluster_id: ' + cluster.id.to_s + ', ' : ''}progress_img: '#{PROGRESS_SPINNER_PATH}', url_get_objects: '/my_collex/get_all_collected_objects', populate_collex_obj_url: '/forum/get_nines_obj_list_with_image'}); dlg.show();", :class => 'modify_link' %></li>
<% end -%>
		<li><%= link_to_function("Create a Cluster of Exhibits", "new CreateNewClusterDlg('/clusters/create', #{group.id}, '#{group.name}', 'group_exhibits_list', 'group_exhibits', '/forum/get_nines_obj_list', '#{PROGRESS_SPINNER_PATH}')", { :class => 'modify_link' }) %>&nbsp;-&nbsp;
			<%= link_to_function("what is this?", "$('cluster_explanation').removeClassName('hidden'); $('cluster_what_is_this').addClassName('hidden');", { :class => 'modify_link', :id => 'cluster_what_is_this' }) %>
			<span id="cluster_explanation" class="group_member_explanation hidden" >Clusters are a way to manage multiple exhibits on similar topics. For example, the administrators of a Byron group might want to create clusters for Poetry and Prose, or those using their accounts for teaching purposes might want to create separate clusters for each class.
				<%= link_to_function("[hide this]", "$('cluster_explanation').addClassName('hidden'); $('cluster_what_is_this').removeClassName('hidden');", { :class => 'modify_link' }) %>
			</span>
		</li>
		<li><%= link_to_function('Change Exhibit Visibility', "editVisibility(#{group.id}, gGroupData.exhibit_visibility, #{Group.visibility_to_json()}, #{Group.visibility_explanations_to_json()});", :class => 'nav_link') %></li>
	</ul>
<% else -%>
	<%= link_to_function("[move exhibit to cluster]", "moveExhibitToCluster('/clusters/move_exhibit', #{cluster.id}, gNonClusteredExhibits, 'cluster_details')", { :class => 'modify_link' }) %>
<% end -%>
</div>
<% end -%>
<% exhibits = Exhibit.all(:conditions => [ "group_id = ? AND is_published = 1 AND cluster_id IS NULL", group.id]) if cluster == nil -%>
<% exhibits = Exhibit.find_all_by_cluster_id_and_is_published(cluster.id, 1) if cluster != nil -%>
	<table>
<% if cluster == nil -%>
<% if clusters.length > 0 %>
		<tr><td><span class="group_details_label">Clusters:</span></td></tr>
<% end -%>
<% for clus in clusters -%>
	<tr>
		<td><%= render :partial => 'common/thumbnail', :locals => { :element_id => "cluster_#{clus.id}", :url => get_image_url(get_url_for_internal_image(clus.image, :thumb)), :show_immediately => true } %></td>
		<td class="exhibit_link"><%= link_to clus.name, { :controller => 'clusters', :action => 'show', :id => clus.id }, :class => 'nav_link' %><br />
			<%= pluralize(Exhibit.find_all_by_cluster_id(clus.id).length, "Exhibit")  %>&nbsp;<%= pluralize(DiscussionThread.find_all_by_cluster_id(clus.id).length, "Discussion") %>
		</td>
	</tr>
<% end -%>
<% end -%>
<% if group.can_view_exhibits(user_id) -%>
<% if exhibits.length > 0 %>
		<tr><td><span class="group_details_label">Exhibits:</span></td></tr>
<% end -%>
<% for exhibit in exhibits -%>
	<tr>
		<td><%= render :partial => '/exhibits/exhibit_thumbnail', :locals => { :exhibit => exhibit, :show_immediately => true } %></td>
		<td class="exhibit_link"><%= get_exhibit_link(exhibit) %>&nbsp;by
			<%= get_exhibit_user_link(exhibit) %>
			<% if Exhibit.can_edit(get_curr_user(), exhibit.id) -%>
				| <%= link_to("[Edit this exhibit]", { :controller => 'my_collex', :action => 'edit_exhibit', :id => exhibit.id }, :class => 'nav_link' ) %>
			<% end -%>
			<%= link_to_function("[remove from cluster]", "removeFromCluster(#{group.id}, #{cluster.id}, #{exhibit.id});", { :class => 'nav_link' }) if group.can_edit(user_id) && cluster != nil %>
			<%= link_to_function("[unpublish]", "unpublishExhibit(#{exhibit.id});", { :class => 'nav_link' }) if group.can_edit(user_id) %>
		</td>
	</tr>
<% end # for exhibit in exhibits -%>
<%
	if group.can_edit(user_id)
		if cluster == nil
			pending_exhibits = Exhibit.all(:conditions => ["group_id = ? AND cluster_id IS NULL AND is_published = 2", group.id])
		else
			pending_exhibits = Exhibit.all(:conditions => ["group_id = ? AND cluster_id = ? AND is_published = 2", group.id, cluster.id])
		end
	else
		if cluster == nil
			pending_exhibits = Exhibit.all(:conditions => ["group_id = ? AND cluster_id IS NULL AND is_published = 2 AND user_id = ?", group.id, user_id])
		else
			pending_exhibits = Exhibit.all(:conditions => ["group_id = ? AND cluster_id = ? AND is_published = 2 AND user_id = ?", group.id, cluster.id, user_id])
		end
	end
-%>
<% if pending_exhibits.length > 0 -%>
		<tr><td><span class="group_details_label">Pending Exhibits:</span></td></tr>
<% for exhibit in pending_exhibits -%>
	<tr>
		<td><%= render :partial => '/exhibits/exhibit_thumbnail', :locals => { :exhibit => exhibit, :show_immediately => true } %></td>
		<td class="exhibit_link"><%= get_exhibit_link(exhibit) %>&nbsp;by
			<%= get_exhibit_user_link(exhibit) %>
			<% if Exhibit.can_edit(get_curr_user(), exhibit.id) -%>
				| <%= link_to("[Edit this exhibit]", { :controller => 'my_collex', :action => 'edit_exhibit', :id => exhibit.id }, :class => 'nav_link' ) %>
			<% end -%>
			<%= link_to_function("[remove from cluster]", "removeFromCluster(#{group.id}, #{cluster.id}, #{exhibit.id});", { :class => 'nav_link' }) if group.can_edit(user_id) && cluster != nil %>
			<%= link_to_function("[accept]", "acceptAsPeerReviewed(#{exhibit.id}, gClusterOptions);", { :class => 'nav_link' }) if group.can_edit(user_id) %>
			<%= link_to_function("[revisions needed]", "rejectAsPeerReviewed(#{exhibit.id}, '#{exhibit.get_apparent_author_name()}', '#{exhibit.get_apparent_author_email()}');", { :class => 'nav_link' }) if group.can_edit(user_id) %>
		</td>
	</tr>
<% end # for exhibit in pending_exhibits -%>
<% end # if pending_exhibits.length > 0 -%>
<% if (cluster != nil && exhibits.length == 0) || Exhibit.all(:conditions => [ "group_id = ? AND is_published = 1", group.id]).length == 0 -%>
	<tr><td><div class="empty_list_text" >There have been no exhibits published in this <%= cluster == nil ? "group" : "cluster"  %>.</div></td></tr>
<% end -%>
<% else # if group.can_view_exhibits(user_id) -%>
	<div class="empty_list_text" >You must be a member of this group to see its exhibits.</div>
<% end # if group.can_view_exhibits(user_id) -%>
	</table>
