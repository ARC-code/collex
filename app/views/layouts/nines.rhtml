<!DOCTYPE html
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
   <title>N I N E S</title>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/> 
   <%= stylesheet_link_tag "new9s", :media => "all" %>
   <%= stylesheet_link_tag "sidebar", :media => "all" %>
   <%= stylesheet_link_tag "exhibits", :media => "all" %>   

   <%= javascript_include_tag :defaults %>
   <script type="text/javascript">
     function toggleIt(element) {
         var tr = element.parentNode.parentNode;
//alert("parent node: " + tr);
         var className = tr.className;
         //if (tr.previousSibling.className == className) 
         if (node_before(tr).className == className) 
         { 
           //tr = tr.previousSibling; 
           tr = node_before(tr);
         }
         
         while (true) {
             Element.toggle(tr);
             //tr = tr.nextSibling;
             tr = node_after(tr);
//window.alert("sibling: " + tr);
             if (tr == null || tr.className != className) break;
         }
     }
     function popUp(URL) {
       day = new Date();
       id = day.getTime();
       eval("page" + id + " = window.open(URL, '" + id + "', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=300,height=400');");
     }

/** Note: methods below are needed to overcome a bug in Firefox.  An explanation
 *        is at:
 *         
 *        http://developer.mozilla.org/en/docs/Whitespace_in_the_DOM
 */
     
/**
 * Version of |previousSibling| that skips nodes that are entirely
 * whitespace or comments.  (Normally |previousSibling| is a property
 * of all DOM nodes that gives the sibling node, the node that is
 * a child of the same parent, that occurs immediately before the
 * reference node.)
 *
 * @param sib  The reference node.
 * @return     Either:
 *               1) The closest previous sibling to |sib| that is not
 *                  ignorable according to |is_ignorable|, or
 *               2) null if no such node exists.
 */
function node_before( sib )
{
  while ((sib = sib.previousSibling)) {
    if (!is_ignorable(sib)) return sib;
  }
  return null;
}

/**
 * Version of |nextSibling| that skips nodes that are entirely
 * whitespace or comments.
 *
 * @param sib  The reference node.
 * @return     Either:
 *               1) The closest next sibling to |sib| that is not
 *                  ignorable according to |is_ignorable|, or
 *               2) null if no such node exists.
 */
function node_after( sib )
{
  while ((sib = sib.nextSibling)) {
    if (!is_ignorable(sib)) return sib;
  }
  return null;
}

/**
 * Determine if a node should be ignored by the iterator functions.
 *
 * @param nod  An object implementing the DOM1 |Node| interface.
 * @return     true if the node is:
 *                1) A |Text| node that is all whitespace
 *                2) A |Comment| node
 *             and otherwise false.
 */

function is_ignorable( nod )
{
  return ( nod.nodeType == 8) || // A comment node
         ( (nod.nodeType == 3) && is_all_ws(nod) ); // a text node, all ws
}

/**
 * Determine whether a node's text content is entirely whitespace.
 *
 * @param nod  A node implementing the |CharacterData| interface (i.e.,
 *             a |Text|, |Comment|, or |CDATASection| node
 * @return     True if all of the text content of |nod| is whitespace,
 *             otherwise false.
 */
function is_all_ws( nod )
{
  // Use ECMA-262 Edition 3 String and RegExp features
  return !(/[^\t\n\r ]/.test(nod.data));
}
   </script>

<script type="text/javascript">
// borrowed from http://developer.apple.com/internet/webcontent/examples/popup.html

// Copyright © 2000 by Apple Computer, Inc., All Rights Reserved.
//
// You may incorporate this Apple sample code into your own code
// without restriction. This Apple sample code has been provided "AS IS"
// and the responsibility for its operation is yours. You may redistribute
// this code, but you are not permitted to redistribute it as
// "Apple sample code" after having made changes.
//
// ************************
// layer utility routines *
// ************************

function getStyleObject(objectId) {
    // cross-browser function to get an object's style object given its id
    if(document.getElementById && document.getElementById(objectId)) {
	// W3C DOM
	return document.getElementById(objectId).style;
    } else if (document.all && document.all(objectId)) {
	// MSIE 4 DOM
	return document.all(objectId).style;
    } else if (document.layers && document.layers[objectId]) {
	// NN 4 DOM.. note: this won't find nested layers
	return document.layers[objectId];
    } else {
	return false;
    }
} // getStyleObject

function changeObjectVisibility(objectId, newVisibility) {
    // get a reference to the cross-browser style object and make sure the object exists
    var styleObject = getStyleObject(objectId);
    if(styleObject) {
	styleObject.visibility = newVisibility;
	return true;
    } else {
	// we couldn't find the object, so we can't change its visibility
	return false;
    }
} // changeObjectVisibility

function moveObject(objectId, newXCoordinate, newYCoordinate) {
    // get a reference to the cross-browser style object and make sure the object exists
    var styleObject = getStyleObject(objectId);
    if(styleObject) {
	styleObject.left = "" + (newXCoordinate-500) + "px";
	styleObject.top = "" + (newYCoordinate-50) + "px";
//window.alert("left: " + styleObject.left + "  coord left: " + newXCoordinate + " id: " + objectId);
	return true;
    } else {
	// we couldn't find the object, so we can't very well move it
	return false;
    }
} // moveObject




// Copyright © 2000 by Apple Computer, Inc., All Rights Reserved.
//
// You may incorporate this Apple sample code into your own code
// without restriction. This Apple sample code has been provided "AS IS"
// and the responsibility for its operation is yours. You may redistribute
// this code, but you are not permitted to redistribute it as
// "Apple sample code" after having made changes.
// ********************************
// application-specific functions *
// ********************************

// store variables to control where the popup will appear relative to the cursor position
// positive numbers are below and to the right of the cursor, negative numbers are above and to the left

var agt=navigator.userAgent.toLowerCase()
var is_ie  = agt.indexOf("msie") != -1

// internet explorer sucks and needs to be tricked into getting the right offset
if (is_ie)
{
  var xOffset = 240;
}
else
{
  var xOffset = 30;
}
var yOffset = -5;

function showPopup (targetObjectId, eventObj) {
    if(eventObj) {
	// hide any currently-visible popups
	hideCurrentPopup();
	// stop event from bubbling up any farther
	eventObj.cancelBubble = true;
	// move popup div to current cursor position 
	// (add scrollTop to account for scrolling for IE)
	var newXCoordinate = (eventObj.pageX)?eventObj.pageX + xOffset:eventObj.x + xOffset + ((document.body.scrollLeft)?document.body.scrollLeft:0);
	var newYCoordinate = (eventObj.pageY)?eventObj.pageY + yOffset:eventObj.y + yOffset + ((document.body.scrollTop)?document.body.scrollTop:0);
	moveObject(targetObjectId, newXCoordinate, newYCoordinate);
	// and make it visible
	if( changeObjectVisibility(targetObjectId, 'visible') ) {
	    // if we successfully showed the popup
	    // store its Id on a globally-accessible object
	    window.currentlyVisiblePopup = targetObjectId;
	    return true;
	} else {
	    // we couldn't show the popup, boo hoo!
	    return false;
	}
    } else {
	// there was no event object, so we won't be able to position anything, so give up
	return false;
    }
} // showPopup

function hideCurrentPopup() {
    // note: we've stored the currently-visible popup on the global object window.currentlyVisiblePopup
    if(window.currentlyVisiblePopup) {
	changeObjectVisibility(window.currentlyVisiblePopup, 'hidden');
	window.currentlyVisiblePopup = false;
    }
} // hideCurrentPopup



// ***********************
// hacks and workarounds *
// ***********************

// initialize hacks whenever the page loads
window.onload = initializeHacks;

// setup an event handler to hide popups for generic clicks on the document
document.onclick = hideCurrentPopup;

function initializeHacks() {
    // this ugly little hack resizes a blank div to make sure you can click
    // anywhere in the window for Mac MSIE 5
    if ((navigator.appVersion.indexOf('MSIE 5') != -1) 
	&& (navigator.platform.indexOf('Mac') != -1)
	&& getStyleObject('blankDiv')) {
	window.onresize = explorerMacResizeFix;
    }
    resizeBlankDiv();
    // this next function creates a placeholder object for older browsers
    createFakeEventObj();
}

function createFakeEventObj() {
    // create a fake event object for older browsers to avoid errors in function call
    // when we need to pass the event object to functions
    if (!window.event) {
	window.event = false;
    }
} // createFakeEventObj

function resizeBlankDiv() {
    // resize blank placeholder div so IE 5 on mac will get all clicks in window
    if ((navigator.appVersion.indexOf('MSIE 5') != -1) 
	&& (navigator.platform.indexOf('Mac') != -1)
	&& getStyleObject('blankDiv')) {
	getStyleObject('blankDiv').width = document.body.clientWidth - 20;
	getStyleObject('blankDiv').height = document.body.clientHeight - 20;
    }
}

function explorerMacResizeFix () {
    location.reload(false);
}

// -----
function showCollector(uri, event, header) {
  f = $('collectform');
  if (f) {
    f.reset();
    f.objid.value = uri;        
    if (!header) header = '';
    $('collector_header').innerHTML = header;
  }
  //alert(uri);
  //showPopup('collectformarea', event);

  var newXCoordinate = (event.pageX)?event.pageX + xOffset:event.x + xOffset + ((document.body.scrollLeft)?document.body.scrollLeft:0);
  var newYCoordinate = (event.pageY)?event.pageY + yOffset:event.y + yOffset + ((document.body.scrollTop)?document.body.scrollTop:0);
  moveObject('collectformarea', newXCoordinate, newYCoordinate);
}

function showAlert(divID, event)
{
  new Effect.Appear(divID, { duration: 0.5 }); 
  var newXCoordinate = (event.pageX)?event.pageX + xOffset:event.x + xOffset + ((document.body.scrollLeft)?document.body.scrollLeft:0);
  var newYCoordinate = (event.pageY)?event.pageY + yOffset:event.y + yOffset + ((document.body.scrollTop)?document.body.scrollTop:0);
  moveObject(divID, newXCoordinate, newYCoordinate+40);
}
</script>
</head>
<body>
	
	<div id="leftPanel">

		<div id="leftPanelContent">
	<div id="sidebar">


<%= render_component(session[:sidebar_state] ? {:controller => "sidebar", :action => session[:sidebar_state][:action], :params => session[:sidebar_state][:params]} : {:controller => 'sidebar', :action => 'cloud', :params => {:user => params[:user], :type => "genre"}}) %> 

	</div>


		</div>
	</div>

<script>
function validateCollector()
{
  if (document.forms['collectform'].collector_tag.value == '')
  {
    Effect.Appear('collect-status', { duration: 1.0 });
    return false;
  }
  else
  {
    Effect.Fade('collect-status', { duration: 0.0 });
    Effect.Appear('collected', { duration: 0.25 });
    document.forms['collectform'].onsubmit();
  }
}
</script>
	
	<div id="mainContent">
		<div id="collectformarea" style="float: none; left: 50px; top: 50px; display: none; POSITION: absolute; BACKGROUND-COLOR: #ededed; LAYER-BACKGROUND-COLOR: #fff; width: 200px; border: 1px solid #666; PADDING: 3px; z-index: 10;"> 
		  <span style="clear:both;float:right;"><%= link_to_function '&#x2715;', 'Effect.Fade("collectformarea", { duration: 0.0 })'%> &nbsp;</span>
		<% if is_logged_in? %>
		<% form_remote_tag(:url => { :action => :collect}, :html => {:id => 'collectform'}, :loading => visual_effect(:fade, "collectformarea", :duration => 1.0) ) do %> 
		  <div id="collector_header"></div>
		  <%= hidden_field_tag :objid, "" -%>
		  <label for="tags"> keywords: &nbsp;<span class="help" title="header=[keywords?] body=[add personal, one-word descriptors for this object. (to collect it, you must assign at least one.) separate your keywords by spaces and join multi-word descriptors with dashes, just-like-this.] offsetx=[140] offsety=[-40] cssheader=[boxheader2] cssbody=[boxbody] fade=[on]">?</span></label> 
		  <%= text_field_tag :tags, '', {:size => 23, :id => 'collector_tag'}  %> <br />
		  <label for="annotation"> notes:</label>
		  <%= text_area_tag :annotation %>
		  <span style="clear:both;float:right;"><%= link_to_function "collect", "validateCollector();" -%> &nbsp; </span>
		<% end %> 
		<% else %>
		  You must be logged in to collect objects.  
		<% end %>
		  <span id="collected" style="display:none;font-weight:bold;clear:both;float:right">COLLECTED</span>
		  <span id="collect-status" style="display:none;font-weight:bold;clear:both;float:right">enter a tag to collect this object</span>
		</div>
	<div id="container">
	    <div id="banner">
	      <div id="navcontainer">
	        <ul id="navlist">
	          <li><%= link_to_popup "about us", {:controller=>'nines',:action=>'about'}, {:title => "header=[NINES] body=[learn more about the NINES initiative here] cssheader=[boxheader2] cssbody=[boxbody] fade=[on]"} -%></li>
				<li><%= link_to "how to...?",  { :controller=>'nines',:action => "help" }, :title => 'header=[using Collex] body=[locate, collect, &amp; annotate digital objects with Collex] cssheader=[boxheader2] cssbody=[boxbody] fade=[on]', :popup => ['window_help', 'height=700,width=700,top=75,left=100,scrollbars=yes'] %></li>
			          <li><%= link_to_popup "join us", {:controller=>'nines',:action=>'join'}, {:title => "header=[join us] body=[become a member of the NINES community] cssheader=[boxheader2] cssbody=[boxbody] fade=[on]"} -%></li>
	        </ul>
	      </div>
		<span class="emph1"><a href="/">NINES</a></span> is a federation of peer-reviewed resources, citation records, and innovative research tools, made freely available to students and scholars of 19th-century culture. &nbsp; <a href="http://www.nines.org" target="_blank">::&nbsp;learn&nbsp;more&nbsp;::</a><br />
	    </div>
  		<div id="content">
  		  <%= h3 flash[:notice], :class => "flash_notice" if flash[:notice] %> 
  		  <%= h3 flash[:warning], :class => "flash_warning" if flash[:warning] %> 
  		  <%= h3 flash[:error], :class => "flash_error" if flash[:error] %> 
        <%= yield %>
      </div>
    </div>
	</div>
	<script type="text/javascript" src="/javascripts/boxover.js"></script>
  </body>
</html>
                
